{"version":3,"sources":["components/Employees/Employees.module.css","redux/employeesReducer.ts","components/Employees/Employees.tsx","api/mock-fetch.ts","assets/img/preloader.gif","components/common/Preloader/Preloader.tsx","components/Employees/EmployeesContainer.tsx","api/api.ts","redux/worklogReducer.ts","components/Employees/Worklog/Worklog.tsx","components/Employees/Worklog/WorklogContainer.tsx","App.tsx","redux/redux-store.ts","index.tsx"],"names":["module","exports","initialState","loading","employees","Employees","props","className","styles","wrapper","title","table","tableHead","headRow","headColumn","align","map","e","birth","Date","birthDate","year","getFullYear","month","getMonth","toString","padStart","day","getDate","newDate","bodyColumn","id","link","to","lastName","firstName","middleName","data","phone","employee_id","from","mockFetch","url","val","Promise","res","rej","setTimeout","Preloader","src","preloader","alt","EmployeesContainer","then","setEmployees","sort","a","b","toUpperCase","changeLoading","this","React","Component","connect","state","employeesPage","dispatch","type","employeeId","worklog","Worklog","name","dateTimeFrom","dateTimeTo","getTime","time","hours","getHours","minutes","getMinutes","date","WorklogContainer","match","params","setEmployeeId","setWorklog","WithRouterWorklog","withRouter","worklogPage","employeeID","App","exact","path","render","rootReducer","combineReducers","action","store","createStore","ReactDOM","document","getElementById"],"mappings":"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AI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sBACNP,GAAI,uBAER,CACIF,GAAI,GACJQ,YAAa,EACbC,KAAM,sB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","file":"static/js/main.a89920c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Employees_preloader__vlAf4\",\"wrapper\":\"Employees_wrapper__1peCq\",\"title\":\"Employees_title__XTrno\",\"name\":\"Employees_name__13eKP\",\"table\":\"Employees_table__1cWri\",\"headColumn\":\"Employees_headColumn__2PuLx\",\"bodyColumn\":\"Employees_bodyColumn__cZPmX\",\"link\":\"Employees_link__105Zk\"};","//Action creators types\r\nexport type EmployeesActionTypes = ReturnType<typeof setEmployees> | ReturnType<typeof changeLoading>\r\n\r\n//Action creators\r\nexport const setEmployees = (employees: EmployeesType[]) => ({type: 'SET_EMPLOYEES', employees} as const);\r\nexport const changeLoading = () => ({type: 'CHANGE_LOADING'} as const);\r\n\r\n//Typing for initialState\r\nexport type InitialStateType = typeof initialState\r\nexport type EmployeesType = {\r\n    id: number\r\n    firstName: string\r\n    lastName: string\r\n    middleName: string\r\n    birthDate: string\r\n    phone: string\r\n}\r\n\r\nconst initialState = {\r\n    loading: true,\r\n    employees: [] as EmployeesType[]\r\n}\r\n\r\nexport const employeesReducer = (state: InitialStateType = initialState, action: EmployeesActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_EMPLOYEES':\r\n            return {\r\n                ...state,\r\n                employees: [...action.employees]\r\n            }\r\n        case 'CHANGE_LOADING':\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport styles from './Employees.module.css';\r\nimport {EmployeesPropsType} from './EmployeesContainer';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Employees = (props: EmployeesPropsType) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <h2 className={styles.title}>Список врачей</h2>\r\n            <table className={styles.table}>\r\n                <thead className={styles.tableHead}>\r\n                <tr className={styles.headRow}>\r\n                    <th className={styles.headColumn}>ID</th>\r\n                    <th className={styles.headColumn} align={'left'}>Name</th>\r\n                    <th className={styles.headColumn}>Date of birthday</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    props.employees.map(e => {\r\n                            const birth = new Date(e.birthDate);\r\n                            const year = birth.getFullYear();\r\n                            const month = (birth.getMonth() + 1).toString().padStart(2, '0');\r\n                            const day = birth.getDate().toString().padStart(2, '0');\r\n                            const newDate = `${day}/${month}/${year}`;\r\n\r\n                            return (\r\n                                <tr key={e.id}>\r\n                                    <th className={styles.bodyColumn}>{e.id}</th>\r\n                                    <th className={styles.bodyColumn} align={'left'}>\r\n                                        <NavLink className={styles.link} to={`/worklog/${e.id}`}>\r\n                                            {e.lastName + ' ' + e.firstName + ' ' + e.middleName}\r\n                                        </NavLink>\r\n                                    </th>\r\n                                    <th className={styles.bodyColumn}>{newDate}</th>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    )\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Employees;","const employees = [\r\n    {\r\n        id: 1,\r\n        firstName: \"Леонид\",\r\n        lastName: \"Старокадомский\",\r\n        middleName: \"Михайлович\",\r\n        birthDate: \"1875-03-27\",\r\n        phone: \"+79975669545\"\r\n    },\r\n    {\r\n        id: 2,\r\n        firstName: \"Владимир\",\r\n        lastName: \"Демихов\",\r\n        middleName: \"Петрович\",\r\n        birthDate: \"1916-06-18\",\r\n        phone: \"+74951263366\"\r\n    },\r\n    {\r\n        id: 3,\r\n        firstName: \"Виктор\",\r\n        lastName: \"Калнберз\",\r\n        middleName: \"Константинович\",\r\n        birthDate: \"1928-06-02\",\r\n        phone: \"+37156698963\"\r\n    },\r\n    {\r\n        id: 4,\r\n        firstName: \"Алоис\",\r\n        lastName: \"Альцгеймер\",\r\n        middleName: \"Эдуардович\",\r\n        birthDate: \"1864-06-14\",\r\n        phone: \"+15559665599\"\r\n    },\r\n    {\r\n        id: 5,\r\n        firstName: \"Авиценна\",\r\n        lastName: \"Сина\",\r\n        middleName: \"Абу Али Ибн\",\r\n        birthDate: \"980-08-23\",\r\n        phone: \"+15559171855\"\r\n    },\r\n    {\r\n        id: 6,\r\n        firstName: \"Александр\",\r\n        lastName: \"Флеминг\",\r\n        middleName: \"Хугович\",\r\n        birthDate: \"1881-08-06\",\r\n        phone: \"+4569988569\"\r\n    }\r\n];\r\n\r\nconst worklog = [\r\n    {\r\n        id: 1,\r\n        employee_id: 1,\r\n        from: \"2021-03-04 04:44:44\",\r\n        to: \"2021-03-04 06:46:09\"\r\n    },\r\n    {\r\n        id: 2,\r\n        employee_id: 1,\r\n        from: \"2021-03-04 06:55:01\",\r\n        to: \"2021-03-04 08:13:10\"\r\n    },\r\n    {\r\n        id: 3,\r\n        employee_id: 1,\r\n        from: \"2021-03-04 09:11:45\",\r\n        to: \"2021-03-04 10:55:34\"\r\n    },\r\n    {\r\n        id: 4,\r\n        employee_id: 1,\r\n        from: \"2021-03-04 11:31:54\",\r\n        to: \"2021-03-04 13:36:34\"\r\n    },\r\n    {\r\n        id: 5,\r\n        employee_id: 1,\r\n        from: \"2021-03-04 14:40:52\",\r\n        to: \"2021-03-04 21:31:27\"\r\n    },\r\n    {\r\n        id: 6,\r\n        employee_id: 1,\r\n        from: \"2021-03-04 21:32:16\",\r\n        to: \"2021-03-04 22:13:47\"\r\n    },\r\n    {\r\n        id: 7,\r\n        employee_id: 1,\r\n        from: \"2021-03-04 22:44:21\",\r\n        to: \"2021-03-04 22:47:15\"\r\n    },\r\n    {\r\n        id: 8,\r\n        employee_id: 1,\r\n        from: \"2021-03-04 23:27:07\",\r\n        to: \"2021-03-04 23:41:45\"\r\n    },\r\n    {\r\n        id: 9,\r\n        employee_id: 1,\r\n        from: \"2021-03-04 23:41:54\",\r\n        to: \"2021-03-04 23:44:51\"\r\n    },\r\n    {\r\n        id: 10,\r\n        employee_id: 1,\r\n        from: \"2021-03-04 23:53:00\",\r\n        to: \"2021-04-04 01:15:22\"\r\n    },\r\n    {\r\n        id: 11,\r\n        employee_id: 2,\r\n        from: \"2021-03-04 03:44:44\",\r\n        to: \"2021-03-04 03:46:09\"\r\n    },\r\n    {\r\n        id: 12,\r\n        employee_id: 2,\r\n        from: \"2021-03-04 03:55:01\",\r\n        to: \"2021-03-04 08:13:10\"\r\n    },\r\n    {\r\n        id: 13,\r\n        employee_id: 2,\r\n        from: \"2021-03-04 09:11:43\",\r\n        to: \"2021-03-04 10:55:37\"\r\n    },\r\n    {\r\n        id: 14,\r\n        employee_id: 2,\r\n        from: \"2021-03-04 10:56:54\",\r\n        to: \"2021-03-04 13:36:34\"\r\n    },\r\n    {\r\n        id: 15,\r\n        employee_id: 2,\r\n        from: \"2021-03-04 13:40:52\",\r\n        to: \"2021-03-04 15:31:27\"\r\n    },\r\n    {\r\n        id: 16,\r\n        employee_id: 2,\r\n        from: \"2021-03-04 15:32:16\",\r\n        to: \"2021-03-04 16:13:47\"\r\n    },\r\n    {\r\n        id: 17,\r\n        employee_id: 3,\r\n        from: \"2021-03-04 00:00:16\",\r\n        to: \"2021-03-04 12:00:47\"\r\n    },\r\n    {\r\n        id: 18,\r\n        employee_id: 3,\r\n        from: \"2021-03-04 12:33:56\",\r\n        to: \"2021-03-04 20:11:11\"\r\n    },\r\n    {\r\n        id: 19,\r\n        employee_id: 4,\r\n        from: \"2021-03-04 00:12:12\",\r\n        to: \"2021-03-04 04:07:09\"\r\n    },\r\n    {\r\n        id: 20,\r\n        employee_id: 4,\r\n        from: \"2021-03-04 06:33:25\",\r\n        to: \"2021-03-04 08:56:12\"\r\n    },\r\n    {\r\n        id: 21,\r\n        employee_id: 4,\r\n        from: \"2021-03-04 09:02:45\",\r\n        to: \"2021-03-04 10:11:11\"\r\n    },\r\n    {\r\n        id: 22,\r\n        employee_id: 4,\r\n        from: \"2021-03-04 11:12:10\",\r\n        to: \"2021-03-04 13:36:34\"\r\n    },\r\n    {\r\n        id: 23,\r\n        employee_id: 4,\r\n        from: \"2021-03-04 13:16:52\",\r\n        to: \"2021-03-04 14:31:27\"\r\n    },\r\n    {\r\n        id: 24,\r\n        employee_id: 4,\r\n        from: \"2021-03-04 16:32:16\",\r\n        to: \"2021-03-04 19:13:59\"\r\n    },\r\n    {\r\n        id: 25,\r\n        employee_id: 4,\r\n        from: \"2021-03-04 19:44:21\",\r\n        to: \"2021-03-04 22:54:15\"\r\n    },\r\n    {\r\n        id: 26,\r\n        employee_id: 4,\r\n        from: \"2021-03-04 23:27:19\",\r\n        to: \"2021-03-04 23:41:30\"\r\n    },\r\n    {\r\n        id: 27,\r\n        employee_id: 5,\r\n        from: \"2021-03-04 11:12:12\",\r\n        to: \"2021-03-04 12:07:09\"\r\n    },\r\n    {\r\n        id: 28,\r\n        employee_id: 5,\r\n        from: \"2021-03-04 12:32:25\",\r\n        to: \"2021-03-04 12:56:13\"\r\n    },\r\n    {\r\n        id: 29,\r\n        employee_id: 5,\r\n        from: \"2021-03-04 14:02:17\",\r\n        to: \"2021-03-04 14:11:08\"\r\n    },\r\n    {\r\n        id: 30,\r\n        employee_id: 5,\r\n        from: \"2021-03-04 15:12:19\",\r\n        to: \"2021-03-04 16:33:33\"\r\n    },\r\n    {\r\n        id: 31,\r\n        employee_id: 5,\r\n        from: \"2021-03-04 18:25:52\",\r\n        to: \"2021-03-04 20:31:12\"\r\n    },\r\n    {\r\n        id: 32,\r\n        employee_id: 5,\r\n        from: \"2021-03-04 20:32:20\",\r\n        to: \"2021-03-04 21:21:21\"\r\n    },\r\n    {\r\n        id: 33,\r\n        employee_id: 5,\r\n        from: \"2021-03-04 22:44:21\",\r\n        to: \"2021-03-04 22:54:15\"\r\n    },\r\n    {\r\n        id: 34,\r\n        employee_id: 5,\r\n        from: \"2021-03-04 22:59:19\",\r\n        to: \"2021-03-04 23:29:30\"\r\n    },\r\n    {\r\n        id: 35,\r\n        employee_id: 6,\r\n        from: \"2021-03-04 02:15:44\",\r\n        to: \"2021-03-04 04:46:09\"\r\n    },\r\n    {\r\n        id: 36,\r\n        employee_id: 6,\r\n        from: \"2021-03-04 17:26:01\",\r\n        to: \"2021-03-04 08:17:10\"\r\n    },\r\n    {\r\n        id: 37,\r\n        employee_id: 6,\r\n        from: \"2021-03-04 09:29:45\",\r\n        to: \"2021-03-04 11:32:34\"\r\n    },\r\n    {\r\n        id: 38,\r\n        employee_id: 6,\r\n        from: \"2021-03-04 11:39:07\",\r\n        to: \"2021-03-04 13:39:07\"\r\n    },\r\n    {\r\n        id: 39,\r\n        employee_id: 6,\r\n        from: \"2021-03-04 14:15:52\",\r\n        to: \"2021-03-04 19:01:08\"\r\n    },\r\n    {\r\n        id: 40,\r\n        employee_id: 6,\r\n        from: \"2021-03-04 19:32:47\",\r\n        to: \"2021-03-04 20:55:47\"\r\n    },\r\n    {\r\n        id: 41,\r\n        employee_id: 6,\r\n        from: \"2021-03-04 22:59:00\",\r\n        to: \"2021-03-04 23:09:15\"\r\n    },\r\n    {\r\n        id: 42,\r\n        employee_id: 6,\r\n        from: \"2021-03-04 23:27:05\",\r\n        to: \"2021-03-04 23:30:45\"\r\n    },\r\n    {\r\n        id: 43,\r\n        employee_id: 6,\r\n        from: \"2021-03-04 23:30:54\",\r\n        to: \"2021-03-04 23:50:01\"\r\n    },\r\n    {\r\n        id: 44,\r\n        employee_id: 6,\r\n        from: \"2021-04-04 00:53:00\",\r\n        to: \"2021-04-04 04:15:22\"\r\n    }\r\n];\r\n\r\nconst data = {\r\n    \"/api/employees\": employees,\r\n    \"/api/employees/worklog\": worklog\r\n};\r\n\r\n// @ts-ignore\r\nfunction delay(val) {\r\n    return new Promise((res, rej) => setTimeout(val ? res : rej, 500, val));\r\n}\r\n\r\n// @ts-ignore\r\nexport function mockFetch(url) {\r\n    // @ts-ignore\r\n    const payload = data[url];\r\n\r\n    return delay(payload);\r\n}\r\n","export default __webpack_public_path__ + \"static/media/preloader.4c0dabf6.gif\";","import React from 'react';\r\nimport preloader from '../../../assets/img/preloader.gif';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <img src={preloader} alt=\"preloader\"/>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport styles from './Employees.module.css';\r\nimport {connect} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\nimport {changeLoading, EmployeesType, setEmployees} from '../../redux/employeesReducer';\r\nimport {RootStateType} from '../../redux/redux-store';\r\nimport Employees from './Employees';\r\nimport {getEmployees} from '../../api/api';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\n//Typing for Users component props\r\nexport type EmployeesPropsType = mapStatePropsType & mapDispatchPropsType\r\n\r\ntype mapStatePropsType = {\r\n    loading: boolean\r\n    employees: EmployeesType[]\r\n}\r\n\r\ntype mapDispatchPropsType = {\r\n    setEmployees: (employees: EmployeesType[]) => void\r\n    changeLoading: () => void\r\n}\r\n\r\nclass EmployeesContainer extends React.Component<EmployeesPropsType> {\r\n    componentDidMount() {\r\n        getEmployees().then(res => {\r\n            // @ts-ignore\r\n            this.props.setEmployees(res.sort((a, b) => a.lastName.toUpperCase() <= b.lastName.toUpperCase() ? -1 : 1))\r\n            this.props.changeLoading()\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const loading = this.props.loading\r\n\r\n        if (loading) {\r\n            return (\r\n                <div className={styles.preloader}>\r\n                    <Preloader/>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return <Employees {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType): mapStatePropsType => {\r\n    return {\r\n        loading: state.employeesPage.loading,\r\n        employees: state.employeesPage.employees\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        setEmployees: (employees: EmployeesType[]) => {\r\n            dispatch(setEmployees(employees))\r\n        },\r\n        changeLoading: () => {\r\n            dispatch(changeLoading())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeesContainer);","import {mockFetch} from './mock-fetch';\r\n\r\nexport function getEmployees() {\r\n    return mockFetch(\"/api/employees\");\r\n}\r\n\r\nexport function getWorklog() {\r\n    return mockFetch(\"/api/employees/worklog\");\r\n}","//Action creators types\r\nexport type WorklogActionTypes = ReturnType<typeof setWorklog> | ReturnType<typeof setEmployeeId>\r\n\r\n//Action creators\r\nexport const setWorklog = (worklog: WorklogType[]) => ({type: 'SET_WORKLOG', worklog} as const);\r\nexport const setEmployeeId = (employeeID: number) => ({type: 'SET_EMPLOYEE_ID', employeeID} as const);\r\n\r\n//Typing for initialState\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport type WorklogType = {\r\n    id: number\r\n    employee_id: number\r\n    from: string\r\n    to: string\r\n}\r\n\r\nconst initialState = {\r\n    employeeId: 0,\r\n    worklog: [] as WorklogType[]\r\n}\r\n\r\nexport const worklogReducer = (state: InitialStateType = initialState, action: WorklogActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_WORKLOG':\r\n            return {\r\n                ...state,\r\n                worklog: [...action.worklog]\r\n            }\r\n        case 'SET_EMPLOYEE_ID':\r\n            return {\r\n                ...state,\r\n                employeeId: action.employeeID\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport styles from '../Employees.module.css'\r\nimport {WorklogPropsType} from './WorklogContainer';\r\n\r\nconst Worklog = (props: WorklogPropsType) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <h2 className={styles.title}>Время присутствия врача в больничном отделении:</h2>\r\n            <p className={styles.name}>{props.employees.map(e => e.id === props.employeeId ? `${e.lastName} ${e.firstName} ${e.middleName}` : '')}</p>\r\n            <table className={styles.table}>\r\n                <thead className={styles.tableHead}>\r\n                <tr className={styles.headRow}>\r\n                    <th className={styles.headColumn}>Date</th>\r\n                    <th className={styles.headColumn}>From Time</th>\r\n                    <th className={styles.headColumn}>To Time</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    props.worklog.map(e => {\r\n                            if (e.employee_id !== props.employeeId) {\r\n                                return undefined\r\n                            }\r\n\r\n                            const dateTimeFrom = new Date(e.from);\r\n                            const dateTimeTo = new Date(e.to);\r\n\r\n                            const getDate = (date: any) => {\r\n                                const year = date.getFullYear();\r\n                                const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n                                const day = date.getDate().toString().padStart(2, '0');\r\n                                return `${day}/${month}/${year}`\r\n                            }\r\n\r\n                            const getTime = (time: any) => {\r\n                                const hours = time.getHours().toString().padStart(2, '0');\r\n                                const minutes = time.getMinutes().toString().padStart(2, '0');\r\n                                return `${hours}:${minutes}`;\r\n                            }\r\n\r\n                            return (\r\n                                <tr key={e.id}>\r\n                                    <th className={styles.bodyColumn}>{getDate(dateTimeFrom)}</th>\r\n                                    <th className={styles.bodyColumn}>{getTime(dateTimeFrom)}</th>\r\n                                    <th className={styles.bodyColumn}>{getTime(dateTimeTo)}</th>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    )\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Worklog;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\nimport {RootStateType} from '../../../redux/redux-store';\r\nimport {setEmployeeId, setWorklog, WorklogType} from '../../../redux/worklogReducer';\r\nimport Worklog from './Worklog';\r\nimport {getWorklog} from '../../../api/api';\r\nimport {RouteComponentProps, withRouter} from 'react-router';\r\nimport {EmployeesType} from '../../../redux/employeesReducer';\r\n\r\n//Typing for Users component props\r\nexport type WorklogPropsType = mapStatePropsType & mapDispatchPropsType\r\n\r\ntype RouteParams = {\r\n    id: string\r\n}\r\n\r\ntype mapStatePropsType = {\r\n    employees: EmployeesType[]\r\n    employeeId: number\r\n    worklog: WorklogType[]\r\n}\r\n\r\ntype mapDispatchPropsType = {\r\n    setWorklog: (worklog: WorklogType[]) => void\r\n    setEmployeeId: (employeeId: number) => void\r\n}\r\n\r\nclass WorklogContainer extends React.Component<WorklogPropsType & RouteComponentProps<RouteParams>, {}> {\r\n    componentDidMount() {\r\n        let employeeId = +this.props.match.params.id;\r\n        this.props.setEmployeeId(employeeId);\r\n\r\n        getWorklog().then(res => {\r\n            // @ts-ignore\r\n            this.props.setWorklog(res)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Worklog {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType): mapStatePropsType => {\r\n    return {\r\n        employees: state.employeesPage.employees,\r\n        employeeId: state.worklogPage.employeeId,\r\n        worklog: state.worklogPage.worklog\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        setWorklog: (worklog: WorklogType[]) => {\r\n            dispatch(setWorklog(worklog))\r\n        },\r\n        setEmployeeId: (employeeId: number) => {\r\n            dispatch(setEmployeeId(employeeId))\r\n        }\r\n    }\r\n}\r\n\r\nlet WithRouterWorklog = withRouter(WorklogContainer);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WithRouterWorklog);","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport EmployeesContainer from './components/Employees/EmployeesContainer';\nimport WorklogContainer from './components/Employees/Worklog/WorklogContainer';\n\nfunction App() {\n    return (\n        <div className=\"wrapper\">\n            <Route exact path=\"/\" render={() => <EmployeesContainer/>}/>\n            <Route exact path={'/worklog/:id'} render={() => <WorklogContainer/>}/>\n        </div>\n    );\n}\n\nexport default App;\n","import {combineReducers, createStore} from 'redux';\r\nimport {employeesReducer} from './employeesReducer';\r\nimport {worklogReducer} from './worklogReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    employeesPage: employeesReducer,\r\n    worklogPage: worklogReducer\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/redux-store';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>, document.getElementById('root')\n);\n"],"sourceRoot":""}